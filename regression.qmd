---
  title: |
  | ECO285 Case 7: 
  | Research Affiliates and Dynamic Multifactor Strategies
author:
- "Group C: Chaira, Simi, Melanie, Ellie"
format:
  html: 
  standalone: true
title-block-banner: true
theme: simplex
fontsize: 1.0em
number-sections: true
number-depth: 3
toc: false
pdf:
  number-sections: true
number-depth: 3
toc: false
---

Loading packages and setting up environment

```{r}
#| label: setup
#| output: false


# here::i_am("analysis/regression.qmd")
# library(here)

library(frenchdata)

library(tidyverse)
library(tidyquant)
library(lubridate)
library(knitr)
library(dplyr)
library(tsibble)

library(PortfolioAnalytics)
library(DEoptim)
library(ROI)
require(ROI.plugin.glpk)
require(ROI.plugin.quadprog)

# library(readxl)
library(readr)
library(zoo)
library(modelsummary)
library(lmtest)
library(sandwich)

library(modelsummary)


# Set global options (for all chunks, unless otherwise specified)
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)

options(scipen = 999) # to avoid displaying numbers in scientific notation
```


Loading data

```{r}
# The four ETFs we want to analyze
etfs <- c("MFUS", "OMFL", "LRGF", "IWB")

# Load data from Yahoo Finance
etf_prices <- tq_get(etfs, 
                     from = "2017-12-01", 
                     to = "2021-02-28", 
                     get = "stock.prices")

# Load the 7-factor data
etf_monthly_returns <- etf_prices |>
  group_by(symbol) |>
  tq_transmute(select = adjusted,
               mutate_fun = periodReturn,
               period = "monthly",
               type = "log")
```

```{r}
french_data_sets <- get_french_data_list()
french_data_sets
```


```{r}
ff_5factors <- download_french_data("Fama/French 5 Factors (2x3)") 
momentum <- download_french_data("Momentum Factor (Mom)")

factors <- ff_5factors$subsets$data[[1]] |>
  left_join(momentum$subsets$data[[1]], by = "date") |>
  mutate(across(-date, \(x) x / 100)) |>  # scale to decimals
  rename(
    MOM = Mom,       
    MKT = `Mkt-RF`
  )

# Now separately:
factors <- factors |>
  mutate(
    yearmon = yearmonth(ym(date)),
    date = ymd("1963-07-31") %m+% months(0:(nrow(factors) - 1))
  ) |>
  select(date, yearmon, MKT, SMB, HML, RMW, CMA, MOM, RF)

head(factors)
```



```{r}
# First, clean lowvol 
lowvol <- read_csv("lowvol.csv")
colnames(lowvol)[1] <- "date"

lowvol <- lowvol |>
  mutate(
    month_part = substr(date, 1, 3),
    year_part = substr(date, 5, 6),
    year_numeric = as.numeric(year_part),
    full_year = ifelse(year_numeric < 25, paste0("20", year_part), paste0("19", year_part)),
    full_date = paste0("01-", month_part, "-", full_year),
    date = as.Date(full_date, format = "%d-%b-%Y"),
    yearmon = as.yearmon(date)    
  )

# Then merge
factors <- factors %>%
  mutate(yearmon = as.yearmon(date)) %>%
  left_join(lowvol, by = "yearmon")

#ChatGPT helped add title to date column and convert character to date
```

5. Compute the average returns and CAPM alphas for each of the seven factors factors over the period from December 2017 until February 2021 (case sample). Repeat these calculations over a longer 30-year sample, from 1994 until 2024. You may also plot the returns to these factors over a longer period.

```{r}
# colnames(case_sample)
```


```{r}
# Filter 2017-2021 case sample
case_sample <- factors %>%
  filter(yearmon >= as.yearmon("2017-12") & yearmon <= as.yearmon("2021-02"))

case_sample %>%
  summarise(across(c(MKT, SMB, HML, RMW, CMA, MOM, `Small LowVol`), mean, na.rm = TRUE))

model_HML <- lm(HML ~ MKT, data = case_sample)
summary(model_HML)  # alpha = intercept

long_sample <- factors %>%
  filter(yearmon >= as.yearmon("1994-01"))

# avg returns
long_sample %>%
  summarise(across(c(MKT, SMB, HML, RMW, CMA, MOM, `Small LowVol`), mean, na.rm = TRUE))

```

```{r}
 lm_HML <- lm(HML ~ MKT, data = case_sample)
# summary(lm_HML)   # intercept = alpha for HML
# 
 lm_SMB <- lm(SMB ~ MKT, data = case_sample)
# summary(lm_SMB)
# 
 lm_RMW <- lm(RMW ~ MKT, data = case_sample)
# summary(lm_RMW)
# 
 lm_CMA <- lm(CMA ~ MKT, data = case_sample)
# summary(lm_CMA)
# 
 lm_MOM <- lm(MOM ~ MKT, data = case_sample)
# summary(lm_MOM)
# 
# lm_VOL <- lm(VOL ~ MKT, data = case_sample)
# summary(lm_VOL)
```


6. Estimate CAPM and 7-factor regressions for the four ETFs across the shorter (2017-2021) case sample and also the longest available sample for each ETF. Report the alpha and beta estimates, together with Newey-West standard errors, in a regression table using model_summary(). Annualize the alphas by multiplying by 12.

```{r}
# CAPM model for MFUS
model_mfus_capm <- lm(MFUS ~ MKT, data = case_sample)

# 7-factor model for MFUS
model_mfus_7f <- lm(MFUS ~ MKT + SMB + HML + RMW + CMA + MOM + `Small LowVol`, data = case_sample)

modelsummary(
  list("MFUS CAPM" = model_mfus_capm, "MFUS 7-Factor" = model_mfus_7f),
  statistic_override = list(
    coeftest(model_mfus_capm, vcov = NeweyWest(model_mfus_capm))[, 2],
    coeftest(model_mfus_7f, vcov = NeweyWest(model_mfus_7f))[, 2]
  ),
  stars = TRUE
)

```


